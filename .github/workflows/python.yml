name: python
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version deploy: 3.8, 3.9 or *'
        required: true
        default: "*"

jobs:
  docker-build:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate matrix
        id: set-matrix
        run: |
          INPUT="${{ github.event.inputs.version }}"

          if [ "$INPUT" = "*" ]; then
            TARGETS=("3.8" "3.9")
          else
            read -ra TARGETS <<< "$INPUT"
          fi

          JSON="["
          for t in "${TARGETS[@]}"; do
            case "$t" in
              3.8)
                JSON+='{"version":"3.8","distro":"stretch"},'
                ;;
              3.9)
                JSON+='{"version":"3.9","distro":"stretch"},'
                JSON+='{"version":"3.9","distro":"buster"},'
                JSON+='{"version":"3.9","distro":"bullseye"},'
                JSON+='{"version":"3.9","distro":"bookworm"},'
                ;;
              *)
                echo "Unknown target: $t"; exit 1
                ;;
            esac
          done

          JSON="${JSON%,}"
          JSON+="]"

          FINAL=$(jq -c --argjson arr "$JSON" '{include:$arr}' <<< "{}")
          echo "Final matrix: $FINAL"
          echo "matrix=$FINAL" >> "$GITHUB_OUTPUT"

  build-amd64:
    needs: docker-build
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.docker-build.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ${{ secrets.DOCKER_REPO }}
          token: ${{ secrets.GH_TOKEN }}
          path: .
          sparse-checkout: images

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Increase swapfile
        run: |
          sudo swapoff -a
          sudo fallocate -l 8G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          sudo swapon --show

      - name: Build docker image
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: ./images/python
          file: ./images/python/Dockerfile-${{ matrix.version }}-${{ matrix.distro }}
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/python:${{ matrix.version }}-${{ matrix.distro }}-amd64

  build-arm64:
    needs: docker-build
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.docker-build.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ${{ secrets.DOCKER_REPO }}
          token: ${{ secrets.GH_TOKEN }}
          path: .
          sparse-checkout: images

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Increase swapfile
        run: |
          sudo swapoff -a
          sudo fallocate -l 8G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          sudo swapon --show

      - name: Build docker image
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: ./images/python
          file: ./images/python/Dockerfile-${{ matrix.version }}-${{ matrix.distro }}
          platforms: linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/python:${{ matrix.version }}-${{ matrix.distro }}-arm64

  manifest:
    needs: [docker-build, build-amd64, build-arm64]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.docker-build.outputs.matrix) }}
    steps:
      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - run: |
          docker buildx create --use
          docker buildx imagetools create \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/python:${{ matrix.version }}-${{ matrix.distro }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/python:${{ matrix.version }}-${{ matrix.distro }}-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/python:${{ matrix.version }}-${{ matrix.distro }}-arm64

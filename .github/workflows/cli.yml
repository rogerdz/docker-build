name: cli
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version deploy.'
        required: true

jobs:
  php:
    runs-on: ubuntu-latest
    if: ${{ (github.event.inputs.version == 'php') || (github.event.inputs.version == '*') }}
    strategy:
      fail-fast: false
      matrix:
        os_version:
          - "bookworm"
          - "bullseye"
          - "buster"
          - "stretch"
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ${{ secrets.DOCKER_REPO }}
          token: ${{ secrets.GH_TOKEN }}
          path: .
          sparse-checkout: images

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Increase swapfile
        run: |
          sudo swapoff -a
          sudo fallocate -l 8G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          sudo swapon --show

      - name: Build and publish
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: ./images/cli
          file: ./images/cli/Dockerfile-debian
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            OS_VERSION=${{ matrix.os_version }}
            BRANCH_CLI=master
            GITHUB_TOKEN=${{ secrets.GH_TOKEN }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/cli:php-${{ matrix.os_version }}

  shopify:
    runs-on: ubuntu-latest
    if: ${{ (github.event.inputs.version == 'shopify') || (github.event.inputs.version == '*') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ${{ secrets.DOCKER_REPO }}
          token: ${{ secrets.GH_TOKEN }}
          path: .
          sparse-checkout: images

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Increase swapfile
        run: |
          sudo swapoff -a
          sudo fallocate -l 8G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          sudo swapon --show

      - name: Build and publish
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: ./images/cli
          file: ./images/cli/Dockerfile-wolfi
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            BRANCH_CLI=shopify
            GITHUB_TOKEN=${{ secrets.GH_TOKEN }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/cli:shopify-wolfi

  node:
    runs-on: ubuntu-latest
    if: ${{ (github.event.inputs.version == 'node') || (github.event.inputs.version == '*') }}
    strategy:
      fail-fast: false
      matrix:
        os_version:
          - "bookworm"
          - "bullseye"
          - "buster"
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ${{ secrets.DOCKER_REPO }}
          token: ${{ secrets.GH_TOKEN }}
          path: .
          sparse-checkout: images

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Increase swapfile
        run: |
          sudo swapoff -a
          sudo fallocate -l 8G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          sudo swapon --show

      - name: Build and publish
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: ./images/cli
          file: ./images/cli/Dockerfile-debian
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            OS_VERSION=${{ matrix.os_version }}
            BRANCH_CLI=node
            GITHUB_TOKEN=${{ secrets.GH_TOKEN }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/cli:node-${{ matrix.os_version }}

  odoo:
    runs-on: ubuntu-latest
    if: ${{ (github.event.inputs.version == 'odoo') || (github.event.inputs.version == '*') }}
    strategy:
      fail-fast: false
      matrix:
        os_version:
          - "bookworm"
          - "bullseye"
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ${{ secrets.DOCKER_REPO }}
          token: ${{ secrets.GH_TOKEN }}
          path: .
          sparse-checkout: images

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Increase swapfile
        run: |
          sudo swapoff -a
          sudo fallocate -l 8G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          sudo swapon --show

      - name: Build and publish
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: ./images/cli
          file: ./images/cli/Dockerfile-debian
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            OS_VERSION=${{ matrix.os_version }}
            BRANCH_CLI=odoo
            GITHUB_TOKEN=${{ secrets.GH_TOKEN }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/cli:odoo-${{ matrix.os_version }}

